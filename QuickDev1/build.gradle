import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.openapi.generator' version '7.0.0'
}

group = 'com.ubs.pbalazs.demo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

sourceSets {
    main.java.srcDirs = ['src/main/java', "$buildDir/generated/sources/api/java/main"]
    main.resources.srcDirs = ['src/main/resources']
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.4")
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }
    implementation('org.springframework.cloud:spring-cloud-starter-openfeign') {
        exclude module: "spring-boot-starter-logging"
        exclude module: "logback-classic"
    }

    // openapi generator
    implementation 'org.openapitools:openapi-generator-gradle-plugin:7.0.0'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // mappers
    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final', 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // orika
    implementation 'ma.glasnost.orika:orika-core:1.5.4'

    // model mapper
    implementation 'org.modelmapper:modelmapper:3.1.1'

    // utilities
    implementation 'org.apache.commons:commons-text:1.10.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

def targetPackage = 'com.ubs.pbalazs.demo.quickdev1.api'

tasks.register("generateAPI", GenerateTask) {
    generatorName = 'spring'
    inputSpec = "$projectDir/src/main/resources/api/api.yaml"
    outputDir = "$buildDir/generated/sources/api/java/main"
    apiPackage = "${targetPackage}"
    modelPackage = "${targetPackage}.models"
    configOptions.put('useSpringBoot3', 'true')
    configOptions.put('interfaceOnly', 'true')
    configOptions.put('dateLibrary', 'java8')
    configOptions.put('agreementDeclaration', 'true')
    configOptions.put('useTags', 'true')
    configOptions.put('sourceFolder', '')
}

compileJava {
    dependsOn tasks.generateAPI
}